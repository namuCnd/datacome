package com.univeramall.user.service;

import java.util.List;

import com.univeramall.generic.service.CrudService;
import com.univeramall.user.dao.UsersDao;
import com.univeramall.user.domain.EditPassword;
import com.univeramall.user.domain.Users;
import com.univeramall.user.domain.UsersParam;

/**
 * <pre>
 * Users service
 * </pre>
 * @FileName UsersService.java
 * @Package com.univeramall.user.service
 * @Organization 
 * @author Sorcerer.Picoo
 * @since 2018. 2. 26.
 * 
 */
public interface UsersService extends CrudService<UsersParam, Users, Users, Users, UsersDao> {

	/**
	 * <pre>
	 * 중복 아이디 개수
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 3. 20.
	 * @param users
	 * @return
	 * @throws Exception
	 */
	public Integer readIdListCnt(Users users) throws Exception;
	
	
	/**
	 * <pre>
	 * UP 변경
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 3. 20.
	 * @param users
	 * @return
	 * @throws Exception
	 */
	public Integer editUp(Users users) throws Exception;
	
	/**
	 * <pre>
	 * 비밀번호 변경
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 3. 20.
	 * @param editPassword
	 * @return
	 * @throws Exception
	 */
	public Integer editPassword(EditPassword editPassword) throws Exception;
	
	/**
	 * <pre>
	 * 최근 로그인 일자 반영
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 3. 20.
	 * @param users
	 * @return
	 * @throws Exception
	 */
	public Integer editLastLogin(Users users);
	
	/**
	 * <pre>
	 * 힐링잎 개수
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 3. 22.
	 * @param usersParam
	 * @return
	 * @throws Exception
	 */
	public Integer readHealingLeafCnt(UsersParam usersParam);

	/**
	 * <pre>
	 * 이메일 SMS 수신여부
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 3. 22.
	 * @param users
	 * @return
	 */
	public Users readSendFlag(Users users);

	/**
	 * <pre>
	 * 사용자 기본 주소 변경
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 3. 22.
	 * @param users
	 * @return
	 */
	public Integer editUserAddress(Users users);
	
	/**
	 * <pre>
	 * 회원통합 대상자 여부 판단
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 4. 12.
	 * @param users
	 * @return
	 */
	public Integer readNeedForIntegration(Users users);
	
	/**
	 * <pre>
	 * 통합대상자 리스트
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 4. 13.
	 * @param users
	 * @return
	 */
	public List<Users> readIntegrationList(Users users);
	
	/**
	 * <pre>
	 * 회원통합
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 4. 13.
	 * @param users
	 * @return
	 */
	public Integer editIntegration(Users users) throws Exception;
	
	/**
	 * <pre>
	 * 본인인증 유도
	 * </pre>
	 * @author Sorcerer.Picoo
	 * @since 2018. 5. 8.
	 * @param users
	 * @return
	 */
	public Integer editCert(Users users);
	
	/**
	 * <pre>
	 * 유니베라 페이 키 갱신
	 * </pre>
	 * @author jinu
	 * @since 2018. 7. 5.
	 * @param users
	 * @return
	 */
	public Integer editWpayKey(Users users);
}
